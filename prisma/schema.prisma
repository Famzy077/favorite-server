generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String
  role        Role         @default(USER)
  isBlocked   Boolean      @default(false)
  verified    Boolean      @default(false)
  userDetails UserDetails?
  products    Product[]
  wishlistItems WishlistItem[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model UserDetails {
  id        String   @id @default(uuid())
  fullName  String?
  phone     String?
  address   String?
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  oldPrice    Float?
  image       String
  publicId    String?
  description String?
  category    String
  quantity    Int?     @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  seller   User   @relation(fields: [sellerId], references: [id])
  sellerId String
  wishlistedBy WishlistItem[] 
}

model WishlistItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int

  @@unique([userId, productId])
}